{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mon_2\\xB0-cerveau\\\\appli_addict\\\\frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/AuthContext.js\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthContextProvider = props => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const signIn = (email, password) => {\n    // Vérifier l'authentification de l'utilisateur avec votre API ou service d'authentification\n    // Si l'authentification est réussie, mettez à jour les états isAuthenticated et user\n    setIsAuthenticated(true);\n    setUser({\n      email: email,\n      password: password\n    });\n  };\n  const signOut = () => {\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      signIn,\n      signOut\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"mbKa3mHmiYR6ypr2drLsAAm+MEk=\");\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","props","_s","isAuthenticated","setIsAuthenticated","user","setUser","signIn","email","password","signOut","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Mon_2°-cerveau/appli_addict/frontend/src/AuthContext.js"],"sourcesContent":["\r\n\r\n\r\n// src/AuthContext.js\r\nimport React, { createContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const signIn = (email, password) => {\r\n    // Vérifier l'authentification de l'utilisateur avec votre API ou service d'authentification\r\n    // Si l'authentification est réussie, mettez à jour les états isAuthenticated et user\r\n    setIsAuthenticated(true);\r\n    setUser({ email: email, password: password });\r\n  };\r\n\r\n  const signOut = () => {\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, signIn, signOut }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAGA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AAE1C,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,MAAM,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAClC;IACA;IACAL,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAAC;MAAEE,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAS,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBN,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,eAAe;MAAEE,IAAI;MAAEE,MAAM;MAAEG;IAAQ,CAAE;IAAAG,QAAA,EACrEZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAE3B,CAAC;AAACf,EAAA,CArBIF,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AAuBzB,eAAeA,mBAAmB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}